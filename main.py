import telebot
from bot_logic import gen_pass, gen_emodji, flip_coin  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ bot_logic
slovar = {"–º–∑–¥–∞":"–î–∞–Ω—å –∏–ª–∏ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ","–ø—Ä–∏–ø–æ–Ω–∞":"–ü—Ä–∏–ø—è—Ç—Å—Ç–≤–∏–µ –∏–ª–∏ –ø–µ—Ä–µ–≥—Ä–∞–¥–∞", "—Ñ–∏–≥–ª—è—Ä":"–®—É—Ç"}
# –ó–∞–º–µ–Ω–∏ 'TOKEN' –Ω–∞ —Ç–æ–∫–µ–Ω —Ç–≤–æ–µ–≥–æ –±–æ—Ç–∞
bot = telebot.TeleBot("TOKEN")

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π Telegram –±–æ—Ç. –ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /hello, /bye, /pass, /emodji –∏–ª–∏ /coin  ")

@bot.message_handler(commands=['hello'])
def send_hello(message):
    bot.reply_to(message, f"–ü—Ä–∏–≤–µ—Ç! {message.from_user.first_name} –ö–∞–∫ –¥–µ–ª–∞?")

@bot.message_handler(commands=['bye'])
def send_bye(message):
    bot.reply_to(message, "–ü–æ–∫–∞! –£–¥–∞—á–∏!")

@bot.message_handler(commands=['help'])
def send_bye(message):
    bot.reply_to(message, "/start = –ù–∞—á–∞–ª–æ –±–æ—Ç–∞, /hello = –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, /bye = –ü—Ä–æ—Å—â–∞–Ω–∏–µ, /pass ""–ö–û–õ–ò–ß–ï–°–¢–í–û –°–ò–ú–í–û–õ–û–í"" = –ì–µ–Ω–∏—Ä–∞—Ç–æ—Ä –ø–∞—Ä–æ–ª–µ–π, /emodji = –õ—é–±–æ–π —ç–º–æ–¥–∂–∏, /coin = –ü–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É, /heh ""–ö–û–õ–ò–ß–ï–°–¢–í–û –†–ê–ó"" = hehüôÉ, /—Å–ª–æ–≤–∞—Ä—å ""–°–õ–û–í–û"" = –°–ª–æ–≤–∞—Ä—å —Å—Ç–∞—Ä—ã—Ö —Å–ª–æ–≤.")

@bot.message_handler(commands=['pass'])
def send_password(message):
    words = message.text.split()
    if len(words) < 2:
        password = gen_pass(8)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –ø–∞—Ä–æ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, 10 —Å–∏–º–≤–æ–ª–æ–≤
    else:
        password = gen_pass(int(words [1]))
    bot.reply_to(message, f"–í–æ—Ç —Ç–≤–æ–π —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: {password}")

@bot.message_handler(commands=['emodji'])
def send_emodji(message):
    emodji = gen_emodji()
    bot.reply_to(message, f"–í–æ—Ç —ç–º–æ–¥–∂–∏': {emodji}")

@bot.message_handler(commands=['coin'])
def send_coin(message):
    coin = flip_coin()
    bot.reply_to(message, f"–ú–æ–Ω–µ—Ç–∫–∞ –≤—ã–ø–∞–ª–∞ —Ç–∞–∫: {coin}")
     # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã '/heh'
     
@bot.message_handler(commands=['heh'])
def send_heh(message):
    count_heh = int(message.text.split()[1]) if len(message.text.split()) > 1 else 5
    bot.reply_to(message, "he" * count_heh)

@bot.message_handler(commands=['—Å–ª–æ–≤–∞—Ä—å'])
def send_slovar(message):
    text_from_user = message.text.split()
    if text_from_user == ["/—Å–ª–æ–≤–∞—Ä—å"]:
        for i in list(slovar.keys()):
            bot.reply_to(message, f"{i}-{slovar[i]}")
    else:
        text_from_user = str(message.text.split()[1])
        text_from_user_for_screach = text_from_user.lower()
        if text_from_user_for_screach in slovar.keys():
            # –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ —Å–ª–æ–≤–æ –Ω–∞—à–ª–æ—Å—å?
            bot.reply_to(message, slovar [text_from_user_for_screach])
        else:
            # –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ —Å–ª–æ–≤–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å?
            bot.reply_to(message, "–ö —Å–æ–∂–µ–ª–µ–Ω–∏—é –Ω–µ –Ω–∞—à–ª–∏ —Ç–∞–∫–æ–µ —Å–ª–æ–≤–æ! –ü–æ–±—Ä–æ–±—É–π—Ç–µ –ú–∑–¥–∞, –ü—Ä–∏–ø–æ–Ω–∞, –§–∏–≥–ª—è—Ä.")
        

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling()